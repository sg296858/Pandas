#Pandas:
1.How to read csv file:
df=pd.read_csv("")
2.How to read csv file using certain cols:
df=pd.read_csv("",usecols=["",""])
3.How to find type of dataframe:(Series or dataframe #dataframe is a datastructure#Series is a 1-dimensional data structure#dataframe is 2dimensional in nature multiple series constitute to form a dataframe)
type(df)
4.How to read first 5 rows and last 5 rows:
df.head(),df.tail()
5.How to read any random rows from dataset?
df.sample(1)
6.How to check for columns?
df.columns
7.How to check for dimension of dataset?
df.shape()
8.How to get the datatypes of the columns of dataset?
df.info(),df.dtypes
9.How to get teh statistical analysis for numerical dataset?
df.describe()--->(mean,std,count,etc..)
10.How to get teh statistical analysis for numerical+categorical data?
df.describe(include='all')
11.How to create a series in pandas with indsexes?
pd.series([1,2,3,4,5],index=['a','b','c']])
12.How to create a data frame from the series?
d=pd.DataFrame(pd.series([1,2,3,4]),index=['a','b','c'])
13.How to add a column?
d.columns=['Shubham']
14.How to modify the original dataframe?
df.reset_index(inplace=True)  (By default the index will become 0,1,2 )
15.How to create a new dataframe from original dataframe?
df[['a','b','c']]     -----type(df[['id']]):dataframe ,-----type(df['id'])----Series
16.How to read excel file?
pd.read_excel("annc.xlsx")
17.How to store the data in my local from newly created dataframe?
df1= df[['a','b','c']] 
df1.to_csv("new.csv")
18.How to read html in pandas?
df1=pd.read_html("") 
df2=df1[0]
df2.head()

18.How to read a json file?
pd.read_json("")
url=''
import requests
data=requets.get(url)
df=data.jsosn()
df

19.How to create a dataframe for index object type only?
df[df.dtypes[df.dtypes=='object'].index]

20.How to check for duplicates in dataset and drop it if any?
df[df.duplicates()]
df[df.drop_duplicated()]

21.How to separate categorical and numerical features in one go by using loop?
categoricalfeatures=[features for features in df.columns if df[features]=='object']
numericalfeatures=[features for features in df.columns if df[features]!=object]

22.How to find unique values from categorical and numericalfeatures?
df[''].unique()
In one go .
for col in categoricalfeatures:
print(f"{col} has {df[col].unique()}")

23.How to create a dataframe for int object type only?
df[df.dtypes[df.dtypes!='object'].index]

24.#stastical analysis for string coloumns shortcut
df.describe(inlude='object')

25.apply,replace map
df[''].apply(lambda x: 1 if x=='' else 0)
df[''].replace("t","x")
df[''].replace(to_replace{"a",'0','b','1'})

26.Conversion of one datatype to another datatype(if null values are not present)
df['a']=df['a'].astype('str')
df['b']=df['b'].astype('int')

if null values are present:
df['a']=pd.to_numeric(df['a'],errors='coerce')

27.handling missing values
mean=df['a'].mean()
mean
df['a']=df['a'].fillna(mean)

median=df['a'].median()
median

median=df['a'].median()
median
df['a']=df['a'].fillna(median)

mode=df['a'].mode()
mode
df['a']=df['a'].fillna(mode)

28.How to drop the missing rows from dataset?
df.dropna()

29.How to drop a column?
df.drop('id',axis=1,inplace=True)

30.#Slicing the rows in pandas
df[1:10]

31.#Slicing the rows in pandas in alternate way
df[10:100:2]

32.How to add a new_cols in dataset?
df['new_cols']="Shubahm"

33.How to find number of unique values in any rows?
df[''].nunique()

34.How to to count the number of unique elements in a column of a Pandas dataframe.?
df[''].value_counts()

35.How to to count the number of unique elements in a column of a Pandas dataframe in percentage.?
df[''].value_counts(normalize=True)

36.How many passengers of age >18?
df[df['Age']>18]

37.#how many passengers have paid less than average fare?
X=df['Fare'].mean()
df[df['Fare']<X]

38.#How many passengers have paid 0 fare?
df[df['Fare']==0]

39.#How many passengers are male and female?
len(df[df['Sex']=='male']),len(df[df['Sex']=='female'])

40.#how many females paid more than the average fare?
df[df['sex']=='female'] & df['Fare']>df['Fare'].mean()

41.#What is the average fare paid by the people who survived?
df.goupby('Survived').mean()

42.#group by with two coloumns
#Average people who survived for each sex ,Pclass

df.groupby(['sex'.'Pclass'])['Survived'].mean()

43.#Implicit index:which pandas give you by default like 0,1,2,3...
#Explicit index:which we definr df[0:100:2]

44.Iloc?(start from 0 and go to upper-1 rows) -----[#df.iloc[0:2, ['Name','Age','Sex']]  it will throw an error because iloc requires numeric indexers]
df.iloc[0:2]
#loc will go with name indexes and iloc will go with inbuilt indexing

45.#concatatnation of 2 series in pandas?
s1=pd.Series(list(df['Name'][2:5],index=['a','b','c']))
s2=pd.Series(list(df['Name'][5:8],index=['a','b','c']))
s1+s2 (#it will work here as index is same)

s=pd.Series(list(df['Name']))
s +s1 #will not work as indexes are different it will give NaN values after concatanation

46.How to drop the first row? 
df.drop(1,inplace=True)

47.How to set the index and reset_index?[useful in time_series data]
df.set_index('Name',inplace=True),df.reset_index('Name',inplace=True)

48.#How to make a data frame from a key value (ie dictionary)?
d={"key1":[1,2,3,4,5],
   "key2":[4,5,6,7,8]} #All the arrays must be of same length
df=pd.DataFrame(d)
df

49.#how to make a dataframe using tuples?
t={"key1":(1,2,3,4,5),
   "key2":(4,5,6,7,8)}
df=pd.DataFrame(t)
df

50.#How to drop the null values? (it will drop row wise put inplace=true if want to make changes in original dataframe)
df.dropna(inplace=True)

51.How to drop the null values column wise?
df.dropna(axis=1)

52.How to drop the null values from a specific column?
df[['Name']].dropna(axis=1,inplace=True)

53.How to check the version in pandas?
pd.__version__

54.How to concatenate two dataframes?
df1=df[['Name','Sex','Age']][0:5]
df1

df2=df[['Name','Sex','Age']][5:10]
df2

pd.to_concat(df1,df2,axis=0) #row wise concatenation

pd.concat([df1,df2],axis=1) #Note:whichever index that are not present in dataframe they will become NaN column wise

55. Merge and join operations
df1=pd.DataFrame({"key1":[1,2,4,5,6],
              "key2":[4,5,6,7,8],
              "key3":[3,4,5,6,6]})
df2=pd.DataFrame({"key1":[1,2,45,6,67],
              "key4":[58,5,6,7,8],
              "key5":[3,56,5,6,6]})
df2

pd.merge(df1,df2)

56.#left merge:All the elements from the left side and common elements from right side
pd.merge(df1,df2,how='left')

57.#right merge
pd.merge(df1,df2,how='right')

58.#outer merge
pd.merge(df1,df2,how='outer') #all the keys of both the dataframes

59.#cross merge:Cartesian product
pd.merge(df1,df2,how='cross')

Join opeartions

60.df1=pd.DataFrame({"key1":[1,2,4,5,6],
              "key2":[4,5,6,7,8],
              "key3":[3,4,5,6,6]},
               index =['a','b','c','d','e']  
                 )
df2=pd.DataFrame({"key6":[1,2,4,5,6],
              "key4":[4,5,6,7,8],
              "key5":[3,4,5,6,6]},
               index =['a','b','h','i','j']  
                 )
df1.join(df2,how='left')
df1.join(df2,how='right') 
df1.join(df2,how='outer') 
df1.join(df2,how='cross') 
df1.join(df2,how='inner') 

61.How to sort index and sort values?
df.sort_index(),df.sort_values()

62.How to increase the width of column?
pd.set_option("display.max_colwidths",1000)

63.#Rolling mean
df.rolling(window=2).mean(),df4.rolling(window=2).sum()

64.df4.cumsum()

65.#Date time
df['updated_time']=pd.to_datetime(df['date'])
df['month']=df['updated_time'].dt.month
df['month']=df['updated_time'].dt.day
df['month']=df['updated_time'].dt.year



